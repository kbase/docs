----------TEST communities_qc get_kmer_compute with -h option
	okay

get_kmer

retrieve a kmer from the communities API

Parameters

	id - the is of the kmer to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc get_kmer_compute with --help option
	okay

get_kmer

retrieve a kmer from the communities API

Parameters

	id - the is of the kmer to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc get_drisee_compute with -h option
	okay

get_drisee

retrieve a drisee from the communities API

Parameters

	id - the is of the drisee to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc get_drisee_compute with --help option
	okay

get_drisee

retrieve a drisee from the communities API

Parameters

	id - the is of the drisee to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc kmer-tool with -h option
	okay

Usage: kmer-tool.py [options] -i <input file> -o <output file>

Options:
  -h, --help            show this help message and exit
  -i INPUT, --input=INPUT
                        Input file, sequence (fasta/fastq) or binary count
                        hash.
  -o OUTPUT, --output=OUTPUT
                        Output file.
  -t TYPE, --type=TYPE  Input file type, one of: fasta, fastq, hash [default
                        'fasta']
  -m MAX, --max=MAX     Maximum size (in Gb) to count, files larger are split
                        [default 10.0].
  -p PROCS, --procs=PROCS
                        Number of processors to use [default 4].
  -l LENGTH, --length=LENGTH
                        Length of kmer to use.
  -s SIZE, --size=SIZE  Size of hash to use, number of unique kmers [default
                        '1G']
  -c COUNT, --count=COUNT
                        Count size in bits [default '12']
  -f FORMAT, --format=FORMAT
                        Output format, one of: hash, stats, dump, histo
                        [default 'histo']
  --histo_max=HISTO_MAX
                        Max count value for histogram [default 10000000]
  -r, --ranked          histo output includes additional transformations for
                        ranked plot
  -d TMPDIR, --tmpdir=TMPDIR
                        Dir to store intermediate files [default is dir of
                        output file]
----------TEST communities_qc kmer-tool with --help option
	okay

Usage: kmer-tool.py [options] -i <input file> -o <output file>

Options:
  -h, --help            show this help message and exit
  -i INPUT, --input=INPUT
                        Input file, sequence (fasta/fastq) or binary count
                        hash.
  -o OUTPUT, --output=OUTPUT
                        Output file.
  -t TYPE, --type=TYPE  Input file type, one of: fasta, fastq, hash [default
                        'fasta']
  -m MAX, --max=MAX     Maximum size (in Gb) to count, files larger are split
                        [default 10.0].
  -p PROCS, --procs=PROCS
                        Number of processors to use [default 4].
  -l LENGTH, --length=LENGTH
                        Length of kmer to use.
  -s SIZE, --size=SIZE  Size of hash to use, number of unique kmers [default
                        '1G']
  -c COUNT, --count=COUNT
                        Count size in bits [default '12']
  -f FORMAT, --format=FORMAT
                        Output format, one of: hash, stats, dump, histo
                        [default 'histo']
  --histo_max=HISTO_MAX
                        Max count value for histogram [default 10000000]
  -r, --ranked          histo output includes additional transformations for
                        ranked plot
  -d TMPDIR, --tmpdir=TMPDIR
                        Dir to store intermediate files [default is dir of
                        output file]
----------TEST communities_qc get_drisee_instance with -h option
	okay

get_drisee

retrieve a drisee from the communities API

Parameters

	id - the is of the drisee to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc get_drisee_instance with --help option
	okay

get_drisee

retrieve a drisee from the communities API

Parameters

	id - the is of the drisee to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc consensus with -h option
	okay

Usage: consensus.py -i <input sequence file> -o <output file>

Options:
  -h, --help            show this help message and exit
  -i INPUT, --input=INPUT
                        Input sequence file.
  -o OUTPUT, --output=OUTPUT
                        Output file.
  -t TYPE, --type=TYPE  file type: fasta, fastq [default 'fasta']
  -b BP_MAX, --bp_max=BP_MAX
                        max number of bps to process [default 100]
  -s SEQ_MAX, --seq_max=SEQ_MAX
                        max number of seqs to process [default 100000]
  -v, --verbose         Wordy [default off]
----------TEST communities_qc consensus with --help option
	okay

Usage: consensus.py -i <input sequence file> -o <output file>

Options:
  -h, --help            show this help message and exit
  -i INPUT, --input=INPUT
                        Input sequence file.
  -o OUTPUT, --output=OUTPUT
                        Output file.
  -t TYPE, --type=TYPE  file type: fasta, fastq [default 'fasta']
  -b BP_MAX, --bp_max=BP_MAX
                        max number of bps to process [default 100]
  -s SEQ_MAX, --seq_max=SEQ_MAX
                        max number of seqs to process [default 100000]
  -v, --verbose         Wordy [default off]
----------TEST communities_qc get_histogram_instance with -h option
	okay

get_histogram

retrieve a histogram from the communities API

Parameters

	id - the is of the histogram to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication

----------TEST communities_qc get_histogram_instance with --help option
	okay

get_histogram

retrieve a histogram from the communities API

Parameters

	id - the is of the histogram to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication

----------TEST communities_qc qiime-uclust with -h option	fail

----------TEST communities_qc qiime-uclust with --help option	fail

----------TEST communities_qc run_find_steiner with -h option	fail

----------TEST communities_qc run_find_steiner with --help option	fail

----------TEST communities_qc get_kmer_instance with -h option
	okay

get_kmer

retrieve a kmer from the communities API

Parameters

	id - the is of the kmer to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc get_kmer_instance with --help option
	okay

get_kmer

retrieve a kmer from the communities API

Parameters

	id - the is of the kmer to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication


----------TEST communities_qc get_histogram_compute with -h option
	okay

get_histogram

retrieve a histogram from the communities API

Parameters

	id - the is of the histogram to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication

----------TEST communities_qc get_histogram_compute with --help option
	okay

get_histogram

retrieve a histogram from the communities API

Parameters

	id - the is of the histogram to be retrieved from the API

Options

	help - display this message

	user - username to authenticate against the API, requires a password to be set as well

	pass - password to authenticate against the API, requires a username to be set as well

	token - Globus Online authentication token

	webkey - MG-RAST webkey to synch with the passed Globus Online authentication

----------TEST communities_qc drisee with -h option
	okay

Usage: drisee.py [options] input_seq_file output_stat_file

Script to calculate sequence error.
Input: fasta/fastq file to get error on
Output: error matrix file
STDOUT: Runtime summary stats

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -p PROCESSES, --processes=PROCESSES
                        Number of processes to use [default '8']
  -t SEQ_TYPE, --seq_type=SEQ_TYPE
                        Sequence type: fasta, fastq [default 'fasta']
  -f, --filter_seq      Run sequence filtering, length and ambig bp [default
                        off]
  -r REP_FILE, --replicate_file=REP_FILE
                        File with sorted replicate bins (bin_id, seq_id)
                        [default to calculate replicates]
  -d TMPDIR, --tmp_dir=TMPDIR
                        DIR for intermediate files (must be full path),
                        deleted at end [default '/tmp']
  -l LOGFILE, --log_file=LOGFILE
                        Detailed processing related stats [default
                        '/dev/null']
  --percent             Additional output (output_stat_file.per) with percent
                        values [default off]
  --prefix_length=PREFIX
                        Prefix length for replicate bins [default 50]
  -s SEQ_MAX, --seq_max=SEQ_MAX
                        Maximum number of reads to process (chosen randomly)
                        [default 1000000]
  -a AMBIG_MAX, --ambig_bp_max=AMBIG_MAX
                        Maximum number of ambiguity characters before
                        rejection [default 0]
  -m STDEV_MULTI, --stdev_multiplier=STDEV_MULTI
                        Multiplier to stddev to get min and max seq lengths
                        [default 2.0]
  -n READ_MIN, --bin_read_min=READ_MIN
                        Minimum number of reads in bin to be considered
                        [default 20]
  -x READ_MAX, --bin_read_max=READ_MAX
                        Maximum number of reads in bin to process (chosen
                        randomly) [default 1000]
  -b NUM_MAX, --bin_num_max=NUM_MAX
                        Maximum number of bins to process (chosen randomly)
                        [default 1000]
  -i ITER_MAX, --iter_max=ITER_MAX
                        Maximum number of iterations if alignment does not
                        converge [default 10]
  -c CONV_MIN, --converge_min=CONV_MIN
                        Minimum number of iterations to identify convergence
                        [default 3]
  -v, --verbose         Write runtime summary stats to STDOUT [default off]
----------TEST communities_qc drisee with --help option
	okay

Usage: drisee.py [options] input_seq_file output_stat_file

Script to calculate sequence error.
Input: fasta/fastq file to get error on
Output: error matrix file
STDOUT: Runtime summary stats

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -p PROCESSES, --processes=PROCESSES
                        Number of processes to use [default '8']
  -t SEQ_TYPE, --seq_type=SEQ_TYPE
                        Sequence type: fasta, fastq [default 'fasta']
  -f, --filter_seq      Run sequence filtering, length and ambig bp [default
                        off]
  -r REP_FILE, --replicate_file=REP_FILE
                        File with sorted replicate bins (bin_id, seq_id)
                        [default to calculate replicates]
  -d TMPDIR, --tmp_dir=TMPDIR
                        DIR for intermediate files (must be full path),
                        deleted at end [default '/tmp']
  -l LOGFILE, --log_file=LOGFILE
                        Detailed processing related stats [default
                        '/dev/null']
  --percent             Additional output (output_stat_file.per) with percent
                        values [default off]
  --prefix_length=PREFIX
                        Prefix length for replicate bins [default 50]
  -s SEQ_MAX, --seq_max=SEQ_MAX
                        Maximum number of reads to process (chosen randomly)
                        [default 1000000]
  -a AMBIG_MAX, --ambig_bp_max=AMBIG_MAX
                        Maximum number of ambiguity characters before
                        rejection [default 0]
  -m STDEV_MULTI, --stdev_multiplier=STDEV_MULTI
                        Multiplier to stddev to get min and max seq lengths
                        [default 2.0]
  -n READ_MIN, --bin_read_min=READ_MIN
                        Minimum number of reads in bin to be considered
                        [default 20]
  -x READ_MAX, --bin_read_max=READ_MAX
                        Maximum number of reads in bin to process (chosen
                        randomly) [default 1000]
  -b NUM_MAX, --bin_num_max=NUM_MAX
                        Maximum number of bins to process (chosen randomly)
                        [default 1000]
  -i ITER_MAX, --iter_max=ITER_MAX
                        Maximum number of iterations if alignment does not
                        converge [default 10]
  -c CONV_MIN, --converge_min=CONV_MIN
                        Minimum number of iterations to identify convergence
                        [default 3]
  -v, --verbose         Write runtime summary stats to STDOUT [default off]
----------TEST communities_qc seq_length_stats with -h option
	okay

Usage: seq_length_stats.py [options] -i input_fasta
Calculate statistics for fasta files.

OUTPUT:
  bp_count
  sequence_count
  average_length
  standard_deviation_length
  length_min
  length_max
  average_gc_content
  standard_deviation_gc_content
  average_gc_ratio
  standard_deviation_gc_ratio
  ambig_char_count
  ambig_sequence_count
  average_ambig_chars
  sequence_type

Options:
  -h, --help            show this help message and exit
  -i INPUT, --input=INPUT
                        Input sequence file
  -o OUTPUT, --output=OUTPUT
                        Output stats file, if not called prints to STDOUT
  -t TYPE, --type=TYPE  Input file type. Must be fasta or fastq [default
                        'fasta']
  -l FILE, --length_bin=FILE
                        File to place length bins [default is no output]
  -g FILE, --gc_percent_bin=FILE
                        File to place % gc bins [default is no output]
  -f, --fast            Fast mode, only calculate length stats
  -s, --seq_type        Guess sequence type [wgs|amplicon] from kmer entropy
----------TEST communities_qc seq_length_stats with --help option
	okay

Usage: seq_length_stats.py [options] -i input_fasta
Calculate statistics for fasta files.

OUTPUT:
  bp_count
  sequence_count
  average_length
  standard_deviation_length
  length_min
  length_max
  average_gc_content
  standard_deviation_gc_content
  average_gc_ratio
  standard_deviation_gc_ratio
  ambig_char_count
  ambig_sequence_count
  average_ambig_chars
  sequence_type

Options:
  -h, --help            show this help message and exit
  -i INPUT, --input=INPUT
                        Input sequence file
  -o OUTPUT, --output=OUTPUT
                        Output stats file, if not called prints to STDOUT
  -t TYPE, --type=TYPE  Input file type. Must be fasta or fastq [default
                        'fasta']
  -l FILE, --length_bin=FILE
                        File to place length bins [default is no output]
  -g FILE, --gc_percent_bin=FILE
                        File to place % gc bins [default is no output]
  -f, --fast            Fast mode, only calculate length stats
  -s, --seq_type        Guess sequence type [wgs|amplicon] from kmer entropy


Error Summary:
qiime-uclust                             -h        32512 
qiime-uclust                             --help    32512 
run_find_steiner                         -h        32512 
run_find_steiner                         --help    32512 

