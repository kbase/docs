Usage: drisee.py [options] input_seq_file output_stat_file

Script to calculate sequence error.
Input: fasta/fastq file to get error on
Output: error matrix file
STDOUT: Runtime summary stats

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -p PROCESSES, --processes=PROCESSES
                        Number of processes to use [default '8']
  -t SEQ_TYPE, --seq_type=SEQ_TYPE
                        Sequence type: fasta, fastq [default 'fasta']
  -f, --filter_seq      Run sequence filtering, length and ambig bp [default
                        off]
  -r REP_FILE, --replicate_file=REP_FILE
                        File with sorted replicate bins (bin_id, seq_id)
                        [default to calculate replicates]
  -d TMPDIR, --tmp_dir=TMPDIR
                        DIR for intermediate files (must be full path),
                        deleted at end [default '/tmp']
  -l LOGFILE, --log_file=LOGFILE
                        Detailed processing related stats [default
                        '/dev/null']
  --percent             Additional output (output_stat_file.per) with percent
                        values [default off]
  --prefix_length=PREFIX
                        Prefix length for replicate bins [default 50]
  -s SEQ_MAX, --seq_max=SEQ_MAX
                        Maximum number of reads to process (chosen randomly)
                        [default 1000000]
  -a AMBIG_MAX, --ambig_bp_max=AMBIG_MAX
                        Maximum number of ambiguity characters before
                        rejection [default 0]
  -m STDEV_MULTI, --stdev_multiplier=STDEV_MULTI
                        Multiplier to stddev to get min and max seq lengths
                        [default 2.0]
  -n READ_MIN, --bin_read_min=READ_MIN
                        Minimum number of reads in bin to be considered
                        [default 20]
  -x READ_MAX, --bin_read_max=READ_MAX
                        Maximum number of reads in bin to process (chosen
                        randomly) [default 1000]
  -b NUM_MAX, --bin_num_max=NUM_MAX
                        Maximum number of bins to process (chosen randomly)
                        [default 1000]
  -i ITER_MAX, --iter_max=ITER_MAX
                        Maximum number of iterations if alignment does not
                        converge [default 10]
  -c CONV_MIN, --converge_min=CONV_MIN
                        Minimum number of iterations to identify convergence
                        [default 3]
  -v, --verbose         Write runtime summary stats to STDOUT [default off]

