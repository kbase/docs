Expression Service 

This service provides users methods for accessing the expression data.
This service provides methods and scripts for extracting data from the portion of the CDS relating to biological experiments.
This expression schema is set up to contain a fair amount of metadata, hook ins to the experiment schema and being a data repository for different types of expression technologies (microarrays (all platforms), RNA-Seq, qPCR, proteomics).

Given a list of sample ids and feature ids this command returns a LabelDataMapping {sampleID}->{featureId => value}}.

AUTHOR: Jason Baumohl (jkbaumohl@lbl.gov)


COMMANDS:

   1 get_expression_data_by_samples_and_features  
   2 get_expression_samples_data  
   3 get_expression_samples_data_by_genome_ids  
   4 get_expression_data_by_feature_ids 

USAGE: get_expression_data_by_samples_and_features 

-sampleID kbase sample ids.                If have multiple sample ids do the following: 
                                                 " -sampleID='kb|sample.2' -sampleID='kb|sample.3' "

-featureID kbase sample ids.                 If have multiple feature ids do the following:
                                           "  -featureID='kb|g.20848.CDS.1800' -featureID='kb|g.20848.CDS.1687' "
                             (If no featureIDs entered, then all features with measurement values will be returned.)

-h, --help Displays this message and ignores all other arguments   
-help, --help Displays this message and ignores all other arguments 
-man, --help Displays this message and ignores all other arguments  
     
Returns : an ExpressionDataSamplesMap 

labelDataMapping = obj->get_expression_data_by_samples_and_features(sampleIDs, featureIDs)

Details: 
sampleIDs            is a SampleIDs
featureIDs           is a FeatureIDs
labelDataMapping     is a LabelDataMapping
SampleIDs            is a reference to a list where each element is a SampleID
SampleID             is a string
FeatureIDs           is a reference to a list where each element is a FeatureID
FeatureID            is a string
LabelDataMapping     is a reference to a hash where the key is a SampleID and the value is a DataExpressionLevelsForSample.

DataExpressionLevelsForSample         is a reference to a hash where the key is a FeatureID and the value is a Measurement
Measurement          is a float

EXAMPLES
perl get_expression_data_by_samples_and_features.pl -sampleID='kb|sample.2' -sampleID='kb|sample.3' -featureID='kb|g.20848.CDS.1800' -featureID='kb|g.20848.CDS.1687'

perl get_expression_data_by_samples_and_features.pl -sampleID='kb|sample.2' -sampleID='kb|sample.3'  (if you want all features with measurments) 

 
USAGE: get_expression_samples_data with -h option
 
Core function used by many others. 
Given a list of KBase SampleIds returns mapping of SampleId to expressionSampleDataStructure 
     (essentially the core Expression Sample Object) : {sample_id -> expressionSampleDataStructure}
  
-sampleID kbase sample ids.    If have multiple sample ids do the following : " -sampleID='kb|sample.2' -sampleID='kb|sample.3' "
-h, --help                     Displays this message and ignores all other arguments   
-help, --help                  Displays this message and ignores all other arguments 
-man, --help                   Displays this message and ignores all other arguments  
   
Returns : an ExpressionDataSamplesMap 

expressionDataSamplesMap = obj->get_expression_samples_data(sampleIDs)

Details : 
SampleIDs is a reference to a list where each element is a SampleID
SampleID is a string
ExpressionDataSamplesMap is a reference to a hash where the key is a SampleID and the value is an ExpressionDataSample
ExpressionDataSample is a reference to a hash where the following keys are defined:
sampleID has a value which is a SampleID
sourceID has a value which is a string
sampleTitle has a value which is a string
sampleDescription has a value which is a string
molecule has a value which is a string
sampleType has a value which is a SampleType
dataSource has a value which is a string
externalSourceID has a value which is a string
externalSourceDate has a value which is a string
kbaseSubmissionDate has a value which is a string
custom has a value which is a string
originalLog2Median has a value which is a float
strainID has a value which is a StrainID
referenceStrain has a value which is a string
wildtype has a value which is a string
strainDescription has a value which is a string
genomeID has a value which is a GenomeID
genomeScientificName has a value which is a string
platformID has a value which is a string
platformTitle has a value which is a string
platformTechnology has a value which is a string
experimentalUnitID has a value which is an ExperimentalUnitID
experimentMetaID has a value which is an ExperimentMetaID
experimentTitle has a value which is a string
experimentDescription has a value which is a string
environmentID has a value which is a string
environmentDescription has a value which is a string
protocolID has a value which is a string
protocolDescription has a value which is a string
protocolName has a value which is a string
sampleAnnotations has a value which is a SampleAnnotations
seriesIDs has a value which is a SeriesIDs
personIDs has a value which is a PersonIDs
sampleIDsAveragedFrom has a value which is a SampleIDsAveragedFrom
dataExpressionLevelsForSample has a value which is a DataExpressionLevelsForSample
SampleType is a string
StrainID is a string
GenomeID is a string
ExperimentalUnitID is a string
ExperimentMetaID is a string
SampleAnnotations is a reference to a list where each element is a SampleAnnotation
 SampleAnnotation is a reference to a hash where the following keys are defined:
sampleAnnotationID has a value which is a SampleAnnotationID
ontologyID has a value which is an OntologyID
ontologyName has a value which is an OntologyName
ontologyDefinition has a value which is an OntologyDefinition
SampleAnnotationID is a string
OntologyID is a string
OntologyName is a string
OntologyDefinition is a string
SeriesIDs is a reference to a list where each element is a SeriesID
SeriesID is a string
PersonIDs is a reference to a list where each element is a PersonID
PersonID is a string
SampleIDsAveragedFrom is a reference to a list where each element is a SampleID
DataExpressionLevelsForSample is a reference to a hash where the key is a FeatureID and the value is a Measurement
FeatureID is a string
Measurement is a float

EXAMPLES
perl get_expression_samples_data.pl -sampleID='kb|sample.2' -sampleID='kb|sample.3' 
 


USAGE: get_expression_samples_data_by_genome_ids 

Given a list of Genome IDs, a SampleType ( controlled vocabulary : microarray, RNA-Seq, qPCR, or proteomics) 
and a int indicating WildTypeOnly (1 = true, 0 = false) , it returns a GenomeExpressionDataSamplesMapping , 
GenomeId -> StrainId -> ExpressionDataSample. StrainId -> 
ExpressionSampleDataStructure {genome_id -> {strain_id -> {sample_id -> expressionSampleDataStructure}}}

 
-genomeID               kbase genome ids.  If have multiple genome ids do the following : 
                            " -genomeID='kb|g.20848'  -genomeID='kb|g.1' "
-sampleType             the type of sample type to limit results to.  
                        Acceptable values (case ignored): 'microarray', 'RNA-Seq', 'qPCR' or 'proteomics'. 
                        Any other passed value will be evaluated to no filter on sample type, thus including all sample types.

-wildTypeOnly           wildTypeOnly is a flag.  
                        If equal to '1','Y' or 'TRUE' then only strains that are wild type will be included in the results. 
 -h, --help             Displays this message and ignores all other arguments   
-help, --help           Displays this message and ignores all other arguments 
-man, --help            Displays this message and ignores all other arguments  
    
Returns : a genomeExpressionDataSamplesMapping
 
genomeExpressionDataSamplesMapping = obj->get_expression_samples_data_by_genome_ids(genomeIDs, sampleType, wildTypeOnly)    

Details : 
genomeIDs is a GenomeIDs
sampleType is a SampleType
wildTypeOnly is a WildTypeOnly
 genomeExpressionDataSamplesMapping is a GenomeExpressionDataSamplesMapping
GenomeIDs is a reference to a list where each element is a GenomeID
GenomeID is a string
SampleType is a string
WildTypeOnly is an string ('Y','TRUE','1','N','FALSE','0')      
GenomeExpressionDataSamplesMapping is a reference to a hash where the key is a GenomeID and the value is a StrainExpressionDataSamplesMapping
StrainExpressionDataSamplesMapping is a reference to a hash where the key is a StrainID and the value is an ExpressionDataSamplesMap
StrainID is a string
ExpressionDataSamplesMap is a reference to a hash where the key is a SampleID and the value is an ExpressionDataSample
SampleID is a string
ExpressionDataSample is a reference to a hash where the following keys are defined:
sampleID has a value which is a SampleID
sourceID has a value which is a string
sampleTitle has a value which is a string
sampleDescription has a value which is a string
molecule has a value which is a string
sampleType has a value which is a SampleType
dataSource has a value which is a string
externalSourceID has a value which is a string
externalSourceDate has a value which is a string
kbaseSubmissionDate has a value which is a string
custom has a value which is a string 
originalLog2Median has a value which is a float
strainID has a value which is a StrainID
referenceStrain has a value which is a string
wildtype has a value which is a string
strainDescription has a value which is a string
genomeID has a value which is a GenomeID
genomeScientificName has a value which is a string
platformID has a value which is a string
platformTitle has a value which is a string
platformTechnology has a value which is a string
experimentalUnitID has a value which is an ExperimentalUnitID
experimentMetaID has a value which is an ExperimentMetaID
experimentTitle has a value which is a string
experimentDescription has a value which is a string
environmentID has a value which is a string
environmentDescription has a value which is a string
protocolID has a value which is a string
protocolDescription has a value which is a string
protocolName has a value which is a string
sampleAnnotations has a value which is a SampleAnnotations
seriesIDs has a value which is a SeriesIDs
personIDs has a value which is a PersonIDs
sampleIDsAveragedFrom has a value which is a SampleIDsAveragedFrom
dataExpressionLevelsForSample has a value which is a DataExpressionLevelsForSample
ExperimentalUnitID is a string
ExperimentMetaID is a string
SampleAnnotations is a reference to a list where each element is a SampleAnnotation
SampleAnnotation is a reference to a hash where the following keys are defined:
sampleAnnotationID has a value which is a SampleAnnotationID
ontologyID has a value which is an OntologyID
ontologyName has a value which is an OntologyName
ontologyDefinition has a value which is an OntologyDefinition
SampleAnnotationID is a string
OntologyID is a string
OntologyName is a string
OntologyDefinition is a string
SeriesIDs is a reference to a list where each element is a SeriesID
SeriesID is a string
PersonIDs is a reference to a list where each element is a PersonID
PersonID is a string
SampleIDsAveragedFrom is a reference to a list where each element is a SampleID
DataExpressionLevelsForSample is a reference to a hash where the key is a FeatureID and the value is a Measurement
FeatureID is a string
Measurement is a float

EXAMPLES
perl get_expression_samples_data_by_genome_ids.pl -genomeID='kb|g.20848' -genomeID='kb|g.0' -sampleType='microarray' -wildTypeOnly='Y'


USAGE: get_expression_data_by_feature_ids 
Given a list of feature ids it returns a featureSampleMeasurementMapping {featureID}->{sampleID => value}}. 

 
-featureID          KBase feature ids.  If have multiple feature ids do the following:
                          " -featureID='kb|g.20848.CDS.1800' -featureID='kb|g.20848.CDS.1687'  "
                        (If no featureIDs entered, then all features with measurment values will be returned.)

-sampleType          the type of sample type to limit results to.  
                     Acceptable values (case ignored): 'microarray', 'RNA-Seq', 'qPCR' or 'proteomics'.
                     Any other passed value will be evaluated to no filter on sample type, thus including all sample types.    

-wildTypeOnly        wildTypeOnly is a flag.  
                     If equal to '1','Y' or 'TRUE' then only strains that are wild type will be included in the results. 

-h, --help           Displays this message and ignores all other arguments   
-help, --help        Displays this message and ignores all other arguments 
-man, --help         Displays this message and ignores all other arguments  
     
Returns : a featureSampleMeasurementMapping
 
featureSampleMeasurementMapping = obj->get_expression_data_by_feature_ids(featureIDs, sampleType, wildTypeOnly)

Details : 
featureIDs is a FeatureIDs
sampleType is a SampleType
wildTypeOnly is a WildTypeOnly
featureSampleMeasurementMapping is a FeatureSampleMeasurementMapping
FeatureIDs is a reference to a list where each element is a FeatureID
FeatureID is a string
SampleType is a string
WildTypeOnly is an string ('Y','TRUE','1','N','FALSE','0')
FeatureSampleMeasurementMapping is a reference to a hash where the key is a FeatureID and the value is a SampleMeasurementMapping
         SampleMeasurementMapping is a reference to a hash where the key is a SampleID and the value is a Measurement
         SampleID is a string
         Measurement is a float

EXAMPLES
perl get_expression_data_by_feature_ids.pl -featureID='kb|g.20848.CDS.1800' -featureID='kb|g.20848.CDS.1687' -sampleType='microarray' -wildTypeOnly='Y'

