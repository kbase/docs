NAME
    coex_pipeline -- pipeline to identify highly differentially expressed genes, construct gene co-expression network, and cluster genes into co-expression modules

SYNOPSIS
    coex_pipeline [-ifqnusmcvrkptelzwoxy]

DESCRIPTION
    Pipeline for computing gene coexpression network and clustering genes into co-expression modules using:
    coex_filter.r => coex_network.r => (coex_cluster.r | coex_cluster2.r)
    
    Please read the help description for the above functions for further help.
    
    NOTE: It is highly recommended that you use the long options to avoid confusion, since there are so many of them.
    
    Inputs: none, unless you do not specify '--sample_index', and then you will have to answer (y|n) to the prompt(s).  It is highly recommended that you input the '--sample_index' option.
    
    Outputs: command line arguments that were run, the output of each step in the pipeline, and writes specified files to disk.
    
    Options:
    --skip_filter             skips coex_filter.r
    --skip_network            skips coex_net.r
    --skip_cluster            skips coex_cluster.r
    --skip_cluster2_hclust    skips coex_cluster2.r using hclust method
    --skip_cluster2_wgcna     skips coex_cluster2.r using wgcna method
    
    Python-generated argument list:

optional arguments:
  -h, --help            show this help message and exit
  -d DIRECTORY, --directory DIRECTORY
                        Directory containing the input file and where you want the files saved.  Leaving this out means that you must specify locations in the input and output files, or all intermediate files will be saved in your current directory, replacing the existing files.
  -i INPUTFILE, --input INPUTFILE
                        Input file name that stores original gene expression data matrix. Each row corresponds to a gene, and each column corresponds to a replicate. The column names are replicate names. The row names are gene names.
  -f FILTERMETHOD, --filter_method FILTERMETHOD
                        Method to identify highly differential expressed genes. Choices include anova and log-odd ratio (lor).
  -q FILTERP, --filter_p FILTERP
                        Maximum p-value up to which genes significantly highly differentially express
  -n TOPNUMBER, --top_number TOPNUMBER
                        Number of top genes that most highly differentially express
  -u FILTEROUTPUT, --filter_output FILTEROUTPUT
                        Output file name that stores gene expression data matrix including selected genes only.  NOTE: This is the same as the input to coex_net.r
  -s SAMPLEINDEX, --sample_index SAMPLEINDEX
                        RECOMMENDED unless no replicates in data: The file that stores a numeric vector to indicate the sample indices that replicates correspond. For example, if sample_index is equal to c(1,1,2,2,3,3), the first two columns of data correspond to Sample 1, the third and fourth columns correspond to Sample 2, and the fifth and sixth columns correspond to Sample 3. Default is that every two columns correspond to a different sample.
  -m NETWORKMETHOD, --network_method NETWORKMETHOD
                        Method to identify highly differential expressed genes. Choices include anova and log-odd ratio (lor).
  -a GENELIST1, --gene_list_1 GENELIST1
                        The first set of the genes of interest.  Leaving this out means all of the genes will be used.
  -b GENELIST2, --gene_list_2 GENELIST2
                        The second set of the genes of interest.  Leaving this out means all of the genes will be used.
  -c CORRTHRESHOLD, --corr_threshold CORRTHRESHOLD
                        Maximum threshold to set elements of Pearson correlation matrix to be zero when method='simple'.
  -v PTHRESHOLD, --p_threshold PTHRESHOLD
                        Maximum p-value up to which genes significantly highly differentially express
  -r MINRSQ, --minRsq MINRSQ
                        Minimum threshold for R2 that measures the fitness of gene co-expression network to scale-free topology in WGCNA. See pickSoftThreshold() of WGCNA for details.
  -k MAXMEDIANK, --max_median_k MAXMEDIANK
                        Maximum median connections for genes in network. See pickSoftThreshold() of WGCNA for details.
  -p MAXPOWER, --max_power MAXPOWER
                        Maximum power to decide the soft threshold. See pickSoftThreshold() of WGCNA for details.
  -t OUTPUTTYPE, --output_type OUTPUTTYPE
                        Type of output. When method = 'edge' or 'e', the function outputs edge list of gene co-expression network consisting of gene pairs with Pearson correlation greater than corr_threshold. When method = 'adjmat' or 'a', the function outputs the adjacency matrix of constructed gene co-expression network.
  -e NETWORKOUTPUT, --network_output NETWORKOUTPUT
                        Output file name.  NOTE: This is the same as the input to coex_cluster.r or coex_cluster2.r, depending on what you selected for '--output_type'
  -l CLUSTERMETHOD, --cluster_method CLUSTERMETHOD
                        Method to cluster genes into co-expression modules. When method = 'hclust' or 'h',the function uses hierarchical clustering. When method = 'WGCNA' or 'W', the function uses WGCNA. If users want to use 'hclust', the original adjacent matrix without any cutcoff (e.g., -c -1.2) is recommended.
  -z MINMODULESIZE, --min_module_size MINMODULESIZE
                        Minimum size of modules when method is WGCNA.
  -w DETECTCUTHEIGHT, --detect_cut_height DETECTCUTHEIGHT
                        Maximum heights to join modules in clustering.
  -o OUTPUTFILE, --output OUTPUTFILE
                        Output file name that stores the clustering results. The first column includes gene names, and the second column includes their modules.
  -x HCLUSTOUTPUT, --hclust_output HCLUSTOUTPUT
                        Output file name that stores the clustering results from the hierarchial clustering method.
  -y WGCNAOUTPUT, --wgcna_output WGCNAOUTPUT
                        Output file name that stores the clustering results from the WGCNA method.

EXAMPLES
    $ ./coex_pipeline.py -d arabidopsis/cultured-protoplast-cell -i data.csv --filter_p 0.0001 --filter_method a --sample_index sample_id.csv --filter_output datafilter.csv --corr_threshold 0.8 --network_output coexpression_network_edge_list.csv --min_module_size 50 --max_median_k 2000 --hclust_output coex_module_h.csv --wgcna_output coex_module_w.csv
    $ ./coex_pipeline.py -d arabidopsis/fruit -i data.csv --filter_p 0.05 --sample_index sample_id.csv --filter_output datafilter.csv --corr_threshold 0.8 --network_output coexpression_network_edge_list.csv --min_module_size 50 --max_power 100 --minRsq 0.75 --hclust_output coex_module_h.csv --skip_cluster2_wgcna
    $ ./coex_pipeline.py -d poplar/xylem -i data.csv

SEE ALSO
    coex_filter.r
    coex_net.r
    coex_cluster.r
    coex_cluster2.r

AUTHORS
    Eric Pan, Daifeng Wang, Gang Fang, Mark Gerstein, Yale University

