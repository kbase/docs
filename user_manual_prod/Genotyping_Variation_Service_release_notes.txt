Genotyping Service

James Gurtowski (gurtowsk@cshl.edu) and Michael Schatz (mschatz@cshl.edu)

The main functionality of the variation service is to identify genome variations
in a genome resequencing project. This includes support for ingesting large
quantities of sequencing reads into the HDFS, mapping those reads to a reference
genome (using Bowtie2 or BWA), scanning the alignments for variants (using
SAMTools), and then exporting the variants in VCF format. The backend of the
service is implemented on Hadoop for high scalability and parallelism.

In this release we have: the client API described in the thrift spec, the client
command line program, server daemons, backend sequence analysis code and
supporting utilities for manipulating data in the HDFS. The Makefile has
correctly working targets defined for make deploy and make test. The tutorial is
available in the docs directory. Executing the client requires a functioning
server daemon and hadoop cluster which is available at ORNL.

In the next release we intend to improve the batch processing capabilities,
enhance support for IRIS, the narrative interface, and the Shock uploading
system by providing program metadata. We will also include new sequence
analysis features for reporting sample quality, basic functional analysis 
of the identified variants, and begin work on the RNA-seq analysis pipelines.

COMMANDS:

   1 jkbase  
   2 jk_compute_bwa  
   3 jk_fs_put_se  
   4 jk_fs_get  
   5 jk_compute_bowtie  
   6 jk_fs_ls  
   7 jk_fs_rm  
   8 jk_compute_samtools_snp  
   9 jk_compute_job_status  
  10 jk_fs_put  
  11 jk_compute_list_jobs  
  12 jk_fs_put_pe  
  13 jk_fs_rmr  
  14 jk_compute_vcf_merge  
  15 jk_compute_list_genomes  
  16 jk_fs_mv  
  17 jk_fs_put_pe_i  
  18 jk_fs_mkdir 

USAGE: jkbase  

Use the functions below to interact with the Cluster.

fs                            Commands that interact with the Cluster Filesystem.
compute                       Commands that launch Compute tasks on the Cluster. 
-user,--username              Optionally specify username via commandline       
-pass,--password              Optionally specify password via commandline.       

USAGE: jk_compute_bwa

BWA Aligner
Align Short reads to an organism's reference genome.
Organism can be specified with the -org flag. Input and 
Output must reside on the Cluster's filesystem. 
Optional additonal arguments may be supplied to both bwa aln and
bwa sampe. 
These options are passed as a string to bwa and should include hyphens(-)
if necessary.
 
-h
-org,--organism                        organism (index)       
-in,--input                            input (directory,.pe,.se)     
-out,--output                          output (directory)                                
-align_opts,--alignment_options        options to pass to bwa aln                        
-sampe_opts,--sampe_options            options to pass to bwa sampe                      
 
USAGE: jk_fs_put_se 

fs -put_se <reads.fq> <output.se>

USAGE: jk_fs_get 

-get <hdfs_file> [local_destination_name]

USAGE: jk_compute_bowtie   

Align Reads using Bowtie Aligner
Short reads in .pe and .se format can be aligned to an organism
reference genome. Specify the organism via the -org flag.
Input and Output must reside in the Cluster's filesystem.

-h                                                                                                   
-org,--organism                                    organism (index)                                  
-in,--input                                        input (directory,.pe,.se)                         
-out,--output                                      output directory                                  
-opts,--options                                    options to pass to bowtie                         
  
USAGE: jk_fs_ls 

-ls [directory]

USAGE: jk_fs_rm 

-rm <file>

USAGE: jk_compute_samtools_snp 

Samtools SNP
Run Samtools SNP pipeline on aligned reads
The general workflow includes uploading short reads
to the Cluster. Aligning them with a given Aligner.
The Samtools SNP algorithm can then be called on the output
from the alignment step. The organism reference genome
should be supplied with the -org parameter.
  
-h                                    This Help                                         
-org,--organism                       Organism reference genome                         
-in,--input                           Input path on the Cluster (Alignments)            
-out,--output                                      Output path on the Cluster                        

USAGE: jk_compute_job_

-h                                                                                                   
-job,--job                            job id                                            

USAGE: jk_compute_job_status 

-h                                                                                                   
-job,--job                            job id                                            

USAGE: jk_fs_put 
  
-put <local_file> [destination]

USAGE: jk_compute_list_jobs

No Active Jobs.

USAGE: jk_fs_put_pe

fs -put_pe <reads.1.fq> <reads.2.fq> <output.pe>

USAGE: jk_fs_rmr 
 
-rm <directory>

USAGE: jk_compute_vcf_merge 

The Variation pipelines are run in parallel.
When they complete, many VCF files will be produced that must be merged
This command takes the output from a variation pipeline and metadata from
the alignment operations and produces a merged VCF file.
The output will be a single VCF file in the Cluster's filesystem.
The file can be downloaded with fs -get
 
-h                                    This Help                                         
-in,--input                           input (directory of vcfs)                         
-aln,--alignments                     alignments (directory)                            
-out,--output                         output (vcf file)                                 
 
USAGE: jk_compute_list_genomes 

Parameters:
-a      List all Genomes
-kb     List KBase Genomes

USAGE: jk_fs_mv 

fs -mv <dir/file> <dest>

USAGE: jk_fs_put_pe_i 

fs -put_pe_i <reads.fq> <output.pe>

USAGE: jk_fs_mkdir
 
fs -mkdir <directory>

