<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <title>Plant expression service tutorial</title>
  <meta name="Generator" content="Cocoa HTML Writer">
  <meta name="CocoaVersion" content="1138.47">
  <style type="text/css">
    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Courier}
    p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Courier; min-height: 14.0px}
  </style>
</head>
<body>
<h1>Ontology Service</h1>
<br>
<strong>Purpose:</strong> The ontology service provides the basic functionality of annotation with GO ids, its description, domain ontologies (e.g. biological process, molecular function, cellular process) of interest and evidence codes for a given set of species specific genes. Additionally, it also allows gene ontology enrichment analysis ("hypergeometric") to be performed on a set of genes that identifies statistically overrepresented GO terms within given gene sets, say for example, GO enrichment of over-expressed genes in drought stress in plant roots.
<br>

<br>
<p><strong>Required Prerequisite Activities: </strong> <a href="/for-users/get-started/">Getting
Started with KBase</a> </p>
<p> <strong>Suggested Prerequisite Activities: </strong> <a href="/for-users/tutorials/retrieving-data/basics-in-retrieving-data-from-kbase/">Basics in Retrieving Data from KBase</a> </p>
<strong>Related Tutorials: </strong>
<br>
<h3>Extract Ontology Terms and Find Statistically Enriched Genes of Interest</h3>
<h3>1. Lookup differentially expressed genes in <em>Arabidopsis thaliana</em> roots under abiotic stress</h3>

For a given list of differentially expressed genes (AT1G03010, AT1G02830,AT1G09770,AT2G01650) in Arabidopsis thaliana roots under abiotic stress conditions, provide gene ontology terms known for each gene.

<br>
<pre>
 First step: Convert external gene identifiers into KBase gene identifiers
 external_ids_to_kbase_ids EnsemblPlant < ath_geneids.txt
 Here ath_geneids.txt is the input ASCII text file containing external Arabidopsis thaliana gene identifiers (one per line).

 The output looks like:
 Athaliana.TAIR10:AT1G03010    kb|g.3899.locus.336
 Athaliana.TAIR10:AT1G02830    kb|g.3899.locus.356
 Athaliana.TAIR10:AT1G09770    kb|g.3899.locus.1122
 Athaliana.TAIR10:AT2G01650    kb|g.3899.locus.8685

 Second step: execute the following command ...
 echo 'kb|g.3899.locus.336','kb|g.3899.locus.356','kb|g.3899.locus.1122','kb|g.3899.locus.8685' | get_goidlist
 The output looks like:
 kb|g.3899.locus.336     GO:0009416    biological_process    ISS     response to light stimulus
 kb|g.3899.locus.336     GO:0004871    molecular_function    IEA     signal transducer activity
 kb|g.3899.locus.336     GO:0009860    biological_process    IEP     pollen tube growth
 kb|g.3899.locus.356     GO:0005840    cellular_component    ISS     ribosome
 kb|g.3899.locus.356     GO:0006412    biological_process    IEA     translation
 kb|g.3899.locus.356     GO:0022625    cellular_component    IDA     cytosolic large ribosomal subunit
 kb|g.3899.locus.356     GO:0005622    cellular_component    IEA     intracellular
 kb|g.3899.locus.356     GO:0003735    molecular_function    IEA     structural constituent of ribosome
 kb|g.3899.locus.1122    GO:0050832    biological_process    IMP     defense response to fungus
 kb|g.3899.locus.1122    GO:0010204    biological_process    IMP     defense response signaling pathway, resistance gene-independent
 kb|g.3899.locus.1122    GO:0003677    molecular_function    ISS     DNA binding
 kb|g.3899.locus.1122    GO:0005515    molecular_function    IEA     protein binding
 kb|g.3899.locus.1122    GO:0009870    biological_process    IMP     defense response signaling pathway, resistance gene-dependent
 kb|g.3899.locus.1122    GO:0042742    biological_process    IMP     defense response to bacterium
 kb|g.3899.locus.1122    GO:0003700    molecular_function    ISS     sequence-specific DNA binding transcription factor activity
 kb|g.3899.locus.1122    GO:0009507    cellular_component    IDA     chloroplast
 kb|g.3899.locus.8685    GO:0003677    molecular_function    IEA     DNA binding
 kb|g.3899.locus.8685    GO:0006281    biological_process    IEA     DNA repair
 kb|g.3899.locus.8685    GO:0005515    molecular_function    IEA     protein binding
 kb|g.3899.locus.8685    GO:0019898    cellular_component    NAS     extrinsic to membrane
 kb|g.3899.locus.8685    GO:0008270    molecular_function    ISS     zinc ion binding
 kb|g.3899.locus.8685    GO:0003676    molecular_function    ISS     nucleic acid binding

 Alternatively, you can put list of genes of your interest in a text file <gid.in> and pass it as an input to the API call as follows ...
 get_goidlist < gid.in

 Third step: Filter the ontology terms for above mentioned genes based on evidence code of type ISS.
 echo 'kb|g.3899.locus.336','kb|g.3899.locus.356','kb|g.3899.locus.1122','kb|g.3899.locus.8685' | get_goidlist --evidence_code=ISS
 The output looks like:
 kb|g.3899.locus.336     GO:0009416    biological_process    ISS     response to light stimulus
 kb|g.3899.locus.356     GO:0005840    cellular_component    ISS     ribosome
 kb|g.3899.locus.1122    GO:0003677    molecular_function    ISS     DNA binding
 kb|g.3899.locus.1122    GO:0003700    molecular_function    ISS     sequence-specific DNA binding transcription factor activity
 kb|g.3899.locus.8685    GO:0008270    molecular_function    ISS     zinc ion binding
 kb|g.3899.locus.8685    GO:0003676    molecular_function    ISS     nucleic acid binding

 Fourth Step: For biological process domain related GO terms the have evidence code of type IEA.
 echo 'kb|g.3899.locus.336','kb|g.3899.locus.356','kb|g.3899.locus.1122','kb|g.3899.locus.8685' | get_goidlist --domain_list=biological_process --evidence_code=IEA
 The output looks like:
 kb|g.3899.locus.356     GO:0006412    biological_process    IEA     translation
 kb|g.3899.locus.8685    GO:0006281    biological_process    IEA     DNA repair

</pre>

<h3>2. Find the enrichment (statistical significance) of differentially expressed genes in <em>Arabidopsis thaliana</em> roots under abiotic stress</h3>

For a given list of differentially expressed genes (AT1G03010, AT1G02830,AT1G09770,AT2G01650) in Arabidopsis thaliana roots under abiotic stress conditions, provide the ontology enrichment based on hypergeometric distribution for each gene.

<br>
<pre>
 First step: Convert external gene identifiers into KBase gene identifiers
 external_ids_to_kbase_ids EnsemblPlant < ath_geneids.txt
 Here ath_geneids.txt is the input ASCII text file containing external Arabidopsis thaliana gene identifiers (one per line).

 The output looks like:
 Athaliana.TAIR10:AT1G03010    kb|g.3899.locus.336
 Athaliana.TAIR10:AT1G02830    kb|g.3899.locus.356
 Athaliana.TAIR10:AT1G09770    kb|g.3899.locus.1122
 Athaliana.TAIR10:AT2G01650    kb|g.3899.locus.8685

 Second step: execute the following command ...
 echo 'kb|g.3899.locus.336','kb|g.3899.locus.356','kb|g.3899.locus.1122','kb|g.3899.locus.8685' | get_go_enrichment
 The output looks like:
 GO:0019898    0.0107579459664984    extrinsic to membrane  cellular_component    kb|g.3899.locus.8685
 GO:0009860    0.0366896969658291    pollen tube growth    biological_process    kb|g.3899.locus.336
 GO:0050832    0.0448327595434993    defense response to fungus    biological_process    kb|g.3899.locus.1122
 GO:0010204    0.00519064592824905   defense response signaling pathway, resistance gene-independent biological_process  kb|g.3899.locus.1122
 GO:0009870    0.00718165774634453   defense response signaling pathway, resistance gene-dependent  biological_process  kb|g.3899.locus.1122

 Alternatively, you can put list of genes of your interest in a text file <gid.in> and pass it as an input to the API call as follows ...
 get_go_enrichment < gid.in

</pre>

<h3>3. Find the GO description and domain information for a list of given GO ids. </h3>

For a given list of GO ids (GO:0010204','GO:0009860','GO:0042742','GO:0005515') provide the gene ontology description and domain information.
<br>
<pre>

 First step: execute the following command ...
 echo 'GO:0010204','GO:0009860','GO:0042742','GO:0005515' | get_go_description
 The output looks like:
 GO:0010204    defense response signaling pathway, resistance gene-independent biological_process
 GO:0005515    protein binding molecular_function
 GO:0042742    defense response to bacterium  biological_process
 GO:0009860    pollen tube growth    biological_process
 Alternatively, you can put list of GO ids of your interest in a text file <goid.in> and pass it as an input to the API call as follows ...
 get_go_description < gid.in

</pre>
<br>
</body>
</html>
